plugins {
    id 'java'
    id 'maven-publish'
    id 'application'
}

def getGitRef() {
    try {
        final def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-parse', '--short', 'HEAD'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    } catch (final Throwable ignored) {
        return 'unknown'
    }
}

final String semver = "${version_major}.${version_minor}.${version_patch}"

String build_number = System.getenv('PROMOTED_NUMBER')
if (build_number == null)
    build_number = System.getenv('BUILD_NUMBER')
if (build_number == null)
    build_number = getGitRef()

version = "${semver}+${build_number}"
group = 'li.cil.sedna'

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
compileJava {
    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    mavenCentral()
    maven { url 'https://maven.cil.li/' } // Sedna
}

dependencies {
    implementation 'org.apache.logging.log4j:log4j-api:2.13.3'
    implementation 'org.apache.logging.log4j:log4j-core:2.13.3'
    implementation 'org.jline:jline:3.16.0'
    implementation 'org.jline:jline-terminal-jna:3.16.0'
    implementation 'net.java.dev.jna:jna:5.6.0'

    implementation 'li.cil.sedna:sedna:1.1.0+'
    implementation 'li.cil.sedna:sedna-buildroot:0.0.1+'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url System.getenv('MAVEN_PATH')
        }
    }
}

application {
    mainClassName = 'li.cil.sedna.cli.Main'
}

run {
    standardInput = System.in
    standardOutput = System.out
}

test {
    useJUnitPlatform()
}
